#!/usr/bin/perl

use strict;
use warnings;

use DateTime;
use FindBin;
use JSON::XS qw(encode_json);
use Mojolicious::Lite;

use lib "$FindBin::Bin/lib/";

use Eldood;

my $ROOT = "https://eldood.com/";

helper encode_json => sub {
    my ($c,$o) = @_;
    return encode_json($o);
};

helper month => sub {
    my ($c,$m) = @_;
    my @names = qw(Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec);
    return $names[$m-1];
};

helper weekday => sub {
    my ($c,$y,$m,$d) = @_;
    my $dt = DateTime->new(
        year => $y,
        month => $m,
        day => $d,
    );
    return $dt->strftime("%a");
};

helper poll_url => sub {
    my ($c,$poll) = @_;
    return $ROOT . $poll->{token};
};

helper is_valid_csrftoken => sub {
    my ($c) = @_;
    return $c->session('csrf_token') eq $c->param('csrf_token');
};

get '/' => sub {
    my ($c) = @_;
    return $c->render('index');
};

get '/:token' => sub {
    my ($c) = @_;
    my $poll = Eldood->get(scalar $c->param('token'));
    return $c->redirect_to('/') if !$poll;
    $c->stash(poll => $poll);
    return $c->render('poll');
};

# name: "My Eldood poll"
# descr: "This is an example poll"
# dates: "20220630,20220701,20220704,20220819"
post '/new' => sub {
    my ($c) = @_;
    return $c->redirect_to('/') if !$c->is_valid_csrftoken;
    my $poll = Eldood->new(
        name => scalar $c->param('name'),
        descr => scalar $c->param('descr'),
        dates => scalar $c->param('dates'),
    );
    return $c->redirect_to('/' . $poll->{token});
};

# token: "a6bef9c5f6"
# name: "jes"
# dates: "20220701,20220819"
post '/respond' => sub {
    my ($c) = @_;
    return $c->redirect_to('/') if !$c->is_valid_csrftoken;
    my $poll = Eldood->get(scalar $c->param('token'));
    return $c->redirect_to('/') if !$poll;
    $poll->respond(
        name => scalar $c->param('name'),
        dates => scalar $c->param('dates'),
    );
    return $c->redirect_to('/' . $poll->{token});
};

# token: "a6bef9c5f6"
# respo: "b653ead819"
post '/scrub' => sub {
    my ($c) = @_;
    return $c->redirect_to('/') if !$c->is_valid_csrftoken;
    my $poll = Eldood->get(scalar $c->param('token'));
    return $c->redirect_to('/') if !$poll;
    $poll->scrub(scalar $c->param('respo'));
    return $c->redirect_to('/' . $poll->{token});
};

# token: "a6bef9c5f6"
# respo: "b653ead819"
# name: "jes"
# dates: "20220701,20220819"
post '/update' => sub {
    my ($c) = @_;
    return $c->redirect_to('/') if !$c->is_valid_csrftoken;
    my $poll = Eldood->get(scalar $c->param('token'));
    return $c->redirect_to('/') if !$poll;
    $poll->update(
        respo => scalar $c->param('respo'),
        name => scalar $c->param('name'),
        dates => scalar $c->param('dates'),
    );
    return $c->redirect_to('/' . $poll->{token});
};

app->start;
